version: "3"
services:
  rabbitmq:
    image: rabbitmq:3-management
    hostname: 'rabbitmq'
    volumes:
      - ./rabbitmq.conf:/etc/rabbitmq/conf.d/11-custom.conf
    ports:
      - 15672:15672
      - 5672:5672

    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  architectureManager-frontend:
    image: node:latest
    entrypoint: npm start
    working_dir: /app
    volumes:
      - ./blocks/architectureManager/frontend:/app
    environment:
      PORT: 443
      REACT_APP_ROOT: ${ROOT}
    expose:
    - 443

    labels:
      traefik.enable: true
      traefik.http.routers.thesis.rule: Host(`${ROOT}`)

  architectureManager:
    image: node:latest
    entrypoint: npm run dev
    working_dir: /app
    expose:
      - 80
    volumes:
      - ./blocks/architectureManager/:/app
      - ./libs:/app/node_modules/@amicopo
    environment:
      PORT: 80
      NODE_ENV: development
      IOConfig: '{ "endpoint": "amqp://rabbitmq" }'
      DEBUG: architectureManager
      DEBUG_COLORS: true

    labels:
      traefik.enable: true
      traefik.http.routers.thesis-archManager.rule: Host(`${ROOT}`) && PathPrefix(`/api`)
    depends_on:
      rabbitmq:
        condition: service_healthy

  userStoryCompiler:
    image: ghcr.io/quinten1333/mt-blocks:userStoryCompiler
    build: blocks/userStoryCompiler
    command: --reload --log-level warning
    expose:
      - 80
    volumes:
      - ./blocks/userStoryCompiler/:/app

    labels:
      traefik.enable: true
      traefik.http.routers.thesis-userStory.rule: Host(`${ROOT}`) && PathPrefix(`/userStory`)
    depends_on:
      rabbitmq:
        condition: service_healthy

  auth:
    image: node:latest
    entrypoint: npm run dev
    working_dir: /app
    volumes:
      - ./blocks/auth/:/app
      - ./libs:/app/node_modules/@amicopo
    environment:
      IOConfig: '{ "archEndpoint": "amqp://rabbitmq", "archExchange": "arch-management-auth" }'
      DEBUG: 'auth:*'
      DEBUG_COLORS: true
    depends_on:
      rabbitmq:
        condition: service_healthy

  gateway:
    image: node:latest
    entrypoint: npm run dev
    working_dir: /app
    ports:
      - 3000:3000
    volumes:
      - ./blocks/gateway/:/app
      - ./libs:/app/node_modules/@amicopo
    environment:
      IOConfig: '{ "archEndpoint": "amqp://rabbitmq", "archExchange": "arch-management-gateway" }'
      DEBUG: 'gateway:*'
      DEBUG_COLORS: true
    depends_on:
      rabbitmq:
        condition: service_healthy

  mongodb:
    image: node:latest
    entrypoint: npm run dev
    working_dir: /app
    volumes:
      - ./blocks/mongodb/:/app
      - ./libs:/app/node_modules/@amicopo
    environment:
      IOConfig: '{ "archEndpoint": "amqp://rabbitmq", "archExchange": "arch-management-mongodb" }'
      DEBUG: 'mongodb:*'
      DEBUG_COLORS: true
    depends_on:
      rabbitmq:
        condition: service_healthy

  filesystem:
    image: node:latest
    entrypoint: npm run dev
    working_dir: /app
    volumes:
      - ./blocks/filesystem/:/app
      - ./libs:/app/node_modules/@amicopo
    environment:
      IOConfig: '{ "archEndpoint": "amqp://rabbitmq", "archExchange": "arch-management-filesystem" }'
      DEBUG: ''
      DEBUG_COLORS: true
    depends_on:
      rabbitmq:
        condition: service_healthy

  util:
    image: node:latest
    entrypoint: npm run dev
    working_dir: /app
    volumes:
      - ./blocks/util/:/app
      - ./libs:/app/node_modules/@amicopo
    environment:
      IOConfig: '{ "archEndpoint": "amqp://rabbitmq", "archExchange": "arch-management-util" }'
      DEBUG: ''
      DEBUG_COLORS: true
    depends_on:
      rabbitmq:
        condition: service_healthy

  dataset-mongodb:
    image: mongo
    command: mongod --quiet --logpath /dev/null
    volumes:
      - mongodb:/data/db
    ports:
      - 27017:27017

volumes:
  mongodb:

networks:
  default:
    name: traefik
    external: true
